{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>The service aims to help ucd teams to create robust content flows (a.k.a questionnaires) to help service users quickly get to releveant/critical content and support, through answering a series of targeted questions.</p>"},{"location":"#problem-statement","title":"Problem Statement","text":"<p>\u201cHow might we ensure that service users quickly get relevant information and support.\u201d \u201cHow might we ensure that UCD teams can create content flows that are easy to use and understand.\u201d</p>"},{"location":"#documentation","title":"Documentation","text":"<p>This site is a collection of documentation to help developers understand the project and its components.</p> <p>You can find the requirements here folder.</p>"},{"location":"#how-it-works","title":"How it works","text":"<p>The Get-To-An-Answer service is a web application that allows you to create, manage, and publish questionnaires.</p> <p>Plus, embed these questionnaires within other DfE/Campaign sites, manually  or via a CMS like Contentful.</p> <p>1) Create - You start by creating a new questionnaire and giving it a title. - You can come back to edit the title, description, and web address (slug).</p> <p>2) Build - Add questions in the order you want people to see them. - For each question, add possible answers. - You can optionally add information pages that can be shown based on someone\u2019s answers (for example, guidance or next steps).</p> <p>3) Collaborate - Invite colleagues to help edit the questionnaire. - Contributors can add questions, answers, and content, and help prepare it for publishing.</p> <p>4) Preview - Try out the questionnaire as if you were a user. - Check that the order of questions makes sense and that each answer leads to the right next step (another question, an internal info page, or an external link).</p> <p>5) Publish - When ready, publish the questionnaire so people can use it. - Each time you publish, a version is saved so you can see what changed over time.</p> <p>6) Use - People visit your questionnaire. - They answer questions and, depending on their choices, are taken to:     - the next relevant question,     - an internal information page, or     - an external website link. 7) Manage - View the history of published versions and the changes between them. - You can unpublish to take it back to draft for further edits. - You can also clone an existing questionnaire to reuse its structure and content.</p> <p>Mermaid diagram (high-level, user-focused)</p> <pre><code>flowchart TB\n  A[Start] --&gt; B[Create a questionnaire]\n  B --&gt; C[Add questions, answers and branching]\n  C --&gt; D[Optional: Add pages/content]\n  D --&gt; E[Optional: Invite collaborators]\n  E --&gt; F[Preview, validate via branching map and refine]\n  F --&gt; G[Publish questionnaire]\n  G --&gt; H[People use the questionnaire]\n  H --&gt; I{Based on answers...}\n  I --&gt;|Next question| J[Show next question]\n  I --&gt;|Show info| K[Show an information page]\n  I --&gt;|External link| L[Send to an external page]\n  J --&gt; H\n  K --&gt; H\n\n  subgraph Management\n    M1[View versions and changes]\n    M2[Unpublish or delete]\n    M3[Clone questionnaire]\n  end\n\n  G --&gt; M1\n  M1 --&gt; M2\n  M1 --&gt; M3</code></pre>"},{"location":"architecture/Application-Architecture/","title":"Application Architecture","text":""},{"location":"architecture/Application-Architecture/#c4-system-landscape","title":"C4: System Landscape","text":""},{"location":"architecture/Application-Architecture/#c4-deployment","title":"C4: Deployment","text":""},{"location":"architecture/Application-Architecture/#component-summary","title":"Component Summary","text":"Component SLA Azure App Service 99.95% Azure Front Door 99.95%"},{"location":"architecture/Application-Architecture/#availability","title":"Availability","text":"<p>The table shows the composite availability. All Services is for when the entire system is running. Because of the nature of how Redis caches the site, if either Redis or Contentful is down, the site would be able to effectively fail over and skip the cache/service from cache only respectively.</p> Scenario Availability All Services 99.64%"},{"location":"architecture/Deployment-Architecture/","title":"Deployment Architecture","text":"<p>GitHub Actions provide CI/CD for this repository. Workflows are grouped by purpose: - Validate: build, run tests (unit/integration/E2E), and static analysis; gate changes. - Generate: produce artifacts such as documentation and security reports. - Deploy: provision/update infrastructure and release application containers.</p>"},{"location":"architecture/Deployment-Architecture/#build-pipeline","title":"Build pipeline","text":"<p>Triggered on pull requests and pushes to main: - Path-aware validation runs only what\u2019s relevant (apps, tests, docs). - Fix any failures before merging; failures on main are priority.</p>"},{"location":"architecture/Deployment-Architecture/#release-pipeline","title":"Release pipeline","text":"<p>Applications (API, Admin, Frontend) are deployed via GitHub Actions to target environments. - Choose the appropriate \u201cDeploy \u2014 \u201d workflow for the environment. - Caching: only clear caches when structural or configuration changes require it. <p>Conceptual deployment flow: <pre><code>%%{ init: { 'flowchart': { 'curve': 'step' } } }%%\nflowchart TD\nA[\"Build Docker Image(s)\"]--&gt;B[\"Push to Container Registry\"]\nB--&gt;C[\"Provision/Update Infra (Terraform)\"]\nC--&gt;D[\"Update Azure Web App(s) to new Image\"]\nD--&gt;E[\"Warm-up / Health checks\"]\nE--&gt;F[\"Route traffic to new version\"]</code></pre></p>"},{"location":"architecture/Deployment-Architecture/#environments","title":"Environments","text":"<ul> <li>Local: run via IDE or Docker Compose.</li> <li>Shared environments (e.g., Development/Test): deployed by GitHub Actions to Azure resources defined in IaC.</li> </ul>"},{"location":"architecture/Deployment-Architecture/#what-gets-deployed","title":"What gets deployed","text":"<ul> <li>Infrastructure as Code: network, registries, app services, databases, and related resources.</li> <li>Applications: API, Admin, and Frontend containers.</li> <li>Supporting artifacts: documentation and security/accessibility scan outputs from Generate workflows.</li> </ul>"},{"location":"architecture/Deployment-Architecture/#operator-guidance","title":"Operator guidance","text":"<ul> <li>Pick the correct environment in the Deploy workflow.</li> <li>Clear caches only when necessary (e.g., schema/config changes).</li> <li>Monitor workflow logs and application health endpoints after deployment.</li> </ul>"},{"location":"architecture/Front-Door/","title":"Azure Front Door","text":"<p>To protect the site from intrusion and general threats, as well as handling things like Geoblocking and SSL certifictes, we are using Front Door combined with the Web Application Firewall</p>"},{"location":"architecture/Front-Door/#geoblocking","title":"Geoblocking","text":"<p>The site is only intended for access from within the United Kingdom, therefore we have leveraged the Geoblocking functionality within Azure's Web Application Firewall (WAF) to dissuade users outside of the United Kingdom from accessing the site.</p> <p>This has worked well, however, we came up against some problems.</p>"},{"location":"architecture/Front-Door/#contentful","title":"Contentful","text":"<p>Contentful's SaaS offering is currently hosted within Europe, but not necessarily within the UK, therefore we have put a rule in to always allow access from Contentful by identifying the <code>X-Contentful-CRN</code> header</p>"},{"location":"architecture/Front-Door/#search-engines","title":"Search Engines","text":"<p>Many search engine spiders exist outside the UK, therefore we have had to put some exclusions into the WAF rules.</p> <p>As IP ranges can change, we chose to allow search engines to bypass the geoblocking by utilising Regular Expressions on the User Agent of the search bot:</p> <pre><code>aolbuild|baidu|bingbot|bingpreview|msnbot|duckduckgo|adsbot-google|googlebot|mediapartners-google|teoma|slurp|yandex|yahoo\n</code></pre> <p>The rule does not allow search engines to index translated or PDF content on the site, plus pages that are not meant to be indexed are excluded using <code>robots.txt</code> rules and Robots Meta tags within the HTML of the site.</p>"},{"location":"architecture/Front-Door/#social-media","title":"Social Media","text":"<p>For the same reasons above, many social media platforms are also outside of the UK, but the sites themselves often \"scrape\" Open Graph information from the page being shared. To support this, we have also allowed social media bots to access these URLS </p> <pre><code>facebookbot|facebookexternalhit|facebookscraper|twitterbot|meta-externalagent|meta-externalfetcher|microsoftpreview|linkedinbot|pinterest|redditbot|telegrambot|mastadon|duckduckbot\n</code></pre>"},{"location":"architecture/Front-Door/#ai","title":"AI","text":"<p>We have allowed some AI tools to scrape the site to gather information, but have blocked access to translated and PDF content in order to protect the site from the costs incurred by translation and PDF generation.</p> <p>The following AI bots have been allowed:</p> <ul> <li>OpenAI</li> <li>ChatGPT</li> <li>Cohere</li> <li>Google (Including Gemini)</li> <li>Amazon (Alexa etc)</li> <li>Apple (Siri)</li> <li>Duck AI Chat (DuckDuckGo)</li> </ul> <pre><code>oai-search|chatgpt|gptbot|cohere-ai|google-extended|amazonbot|applebot|duckassistbot\n</code></pre>"},{"location":"architecture/Front-Door/#dfe-tools","title":"DfE Tools","text":"<p>A number of tools are used within DfE which allow Civil Servants and Contractors to share information. These tools are also hosted outside of the UK, so we have included exemptions to the geoblocking for the followign tools:</p> <ul> <li>Slack</li> <li>Office 365</li> <li>LucidSpark</li> <li>Figma</li> </ul> <p>The user agents we have unblocked are as follows:</p> <pre><code>[\"slack\", \"embedly\", \"figma\", \"skype\"]\n</code></pre>"},{"location":"architecture/Front-Door/#threat-blocking","title":"Threat Blocking","text":""},{"location":"architecture/Front-Door/#front-door-premium","title":"Front Door Premium","text":"<p>Azure Front Door Premium is utilised to handle threat blocking, bot detection, and ensure the site mitigates the latest OWASP threats with as little intervention as possible.</p>"},{"location":"architecture/Front-Door/#the-national-archive","title":"The National Archive","text":"<p>As a gov.uk site, the site was crawled by The National Archive as part of the UK Government Web Archive. Their crawler, however, ignores the robots.txt file by default, which resulted in the site hitting rate limits for translation and PDF generation.</p> <p>We have reached out to the service, who have agreed to exclude the URLs specified in our robots.txt, however while we waited for this to happen, we also placed a restriction on the Mirror Bot scraping translated and PDF content</p> <p>The National Archive have since agreed to exclude the URLs defined in our robots.txt file - so I would highly recommend reaching out to them when creating a new site if you have URLs with dynamically generated content that could incur costs.</p> <p>The rule we implemented is as follows:</p> <ul> <li>If the user agent (converted to lower case) contains <code>mirrorweb</code></li> <li>And the request URI (converted to lower case) contains </li> </ul> <pre><code>[\"/pdf/\", \"/translate-this-website/\"]\n</code></pre> <ul> <li>Then block the connection</li> </ul> <p>As our translatable pages and PDF generation is not linked to from other pages, this works for blocking the archive service on those parts of the site.</p> <p>Our robots.txt file actually goes fully down to a full list of language codes to exclude from search engines.</p>"},{"location":"architecture/Terraform/","title":"Terraform","text":""},{"location":"architecture/Terraform/#requirements","title":"Requirements","text":"Name Version terraform &gt;= 1.13.3 azapi 2.7.0 azurerm ~&gt; 4.45"},{"location":"architecture/Terraform/#providers","title":"Providers","text":"Name Version azapi 2.7.0 azurerm ~&gt; 4.45"},{"location":"architecture/Terraform/#modules","title":"Modules","text":"<p>No modules.</p>"},{"location":"architecture/Terraform/#resources","title":"Resources","text":"Name Type azapi_resource.gettoananswer_main_subnet resource azurerm_app_service_virtual_network_swift_connection.admin_app_vn_conn resource azurerm_app_service_virtual_network_swift_connection.api_app_vn_conn resource azurerm_app_service_virtual_network_swift_connection.frontend_app_vn_conn resource azurerm_application_insights.application-insights resource azurerm_cdn_frontdoor_custom_domain.fd-admin-custom-domain resource azurerm_cdn_frontdoor_custom_domain.fd-api-custom-domain resource azurerm_cdn_frontdoor_custom_domain.fd-frontend-custom-domain resource azurerm_cdn_frontdoor_custom_domain_association.admin-app-custom-domain resource azurerm_cdn_frontdoor_custom_domain_association.api-app-custom-domain resource azurerm_cdn_frontdoor_custom_domain_association.frontend-app-custom-domain resource azurerm_cdn_frontdoor_endpoint.frontdoor-admin-endpoint resource azurerm_cdn_frontdoor_endpoint.frontdoor-api-endpoint resource azurerm_cdn_frontdoor_endpoint.frontdoor-frontend-endpoint resource azurerm_cdn_frontdoor_firewall_policy.web_firewall_policy resource azurerm_cdn_frontdoor_origin.frontdoor-admin-origin resource azurerm_cdn_frontdoor_origin.frontdoor-api-origin resource azurerm_cdn_frontdoor_origin.frontdoor-frontend-origin resource azurerm_cdn_frontdoor_origin_group.frontdoor-origin-group resource azurerm_cdn_frontdoor_profile.frontdoor-web-profile resource azurerm_cdn_frontdoor_route.frontdoor-admin-route resource azurerm_cdn_frontdoor_route.frontdoor-api-route resource azurerm_cdn_frontdoor_route.frontdoor-frontend-route resource azurerm_cdn_frontdoor_rule.security_headers_rule resource azurerm_cdn_frontdoor_rule.security_txt_rule resource azurerm_cdn_frontdoor_rule.thanks_txt_rule resource azurerm_cdn_frontdoor_rule_set.security_headers resource azurerm_cdn_frontdoor_rule_set.security_redirects resource azurerm_cdn_frontdoor_security_policy.frontdoor-web-security-policy resource azurerm_container_registry.gettoananswer-registry resource azurerm_key_vault.key-vault resource azurerm_key_vault_access_policy.github-kv-access resource azurerm_key_vault_secret.application-insights-connection-string resource azurerm_linux_web_app.gettoananswer-admin resource azurerm_linux_web_app.gettoananswer-api resource azurerm_linux_web_app.gettoananswer-frontend resource azurerm_log_analytics_workspace.log-analytics-workspace resource azurerm_monitor_action_group.service-support-action resource azurerm_monitor_metric_alert.admin_app_error_alert resource azurerm_monitor_metric_alert.api_app_error_alert resource azurerm_monitor_metric_alert.availability-alert resource azurerm_monitor_metric_alert.cpu_alert resource azurerm_monitor_metric_alert.frontend_app_error_alert resource azurerm_monitor_metric_alert.memory_alert resource azurerm_monitor_smart_detector_alert_rule.dependency-performance-degradation-detector resource azurerm_monitor_smart_detector_alert_rule.exception-volume-changed-detector resource azurerm_monitor_smart_detector_alert_rule.failure-anomalies-detector resource azurerm_monitor_smart_detector_alert_rule.memory-leak-detector resource azurerm_monitor_smart_detector_alert_rule.request-performance-degradation-detector resource azurerm_monitor_smart_detector_alert_rule.trace-severity-detector resource azurerm_mssql_database.gettoananswer_mssql_db resource azurerm_mssql_server.gettoananswer_mssql_server resource azurerm_mssql_virtual_network_rule.mssql_vnet_rule resource azurerm_network_security_group.gettoananswer-nsg resource azurerm_private_dns_zone.default resource azurerm_private_dns_zone_virtual_network_link.default resource azurerm_resource_group.gettoananswer-rg resource azurerm_service_plan.gettoananswer-web-asp resource azurerm_virtual_network.gettoananswer_vnet resource azurerm_client_config.client data source"},{"location":"architecture/Terraform/#inputs","title":"Inputs","text":"Name Description Type Default Required admin_custom_domain The public subdomain for the admin service <code>string</code> n/a yes admin_image_name The repository name and tag for the admin container. <code>string</code> n/a yes alerting Alerting configuration per environment <pre>map(object({    name                 = string    alerts_enabled       = bool    email_alerts_enabled = bool    smart_alerts_enabled = bool    thresholds = object({      availability = number      cpu          = number      memory       = number      error        = number    })  }))</pre> <pre>{  \"d01\": {    \"alerts_enabled\": false,    \"email_alerts_enabled\": false,    \"name\": \"Test\",    \"smart_alerts_enabled\": false,    \"thresholds\": {      \"availability\": 90,      \"cpu\": 95,      \"error\": 5,      \"memory\": 95    }  },  \"p01\": {    \"alerts_enabled\": true,    \"email_alerts_enabled\": true,    \"name\": \"Production\",    \"smart_alerts_enabled\": true,    \"thresholds\": {      \"availability\": 99.9,      \"cpu\": 85,      \"error\": 1,      \"memory\": 85    }  },  \"t01\": {    \"alerts_enabled\": true,    \"email_alerts_enabled\": false,    \"name\": \"Staging\",    \"smart_alerts_enabled\": true,    \"thresholds\": {      \"availability\": 99.9,      \"cpu\": 85,      \"error\": 1,      \"memory\": 85    }  }}</pre> no api_custom_domain The public subdomain for the api service <code>string</code> n/a yes api_image_name The repository name and tag for the API container. <code>string</code> n/a yes azure_frontdoor_scale Azure Front Door Scale <code>string</code> <code>\"Standard\"</code> no env Environment (dev, test, prod) <code>string</code> n/a yes frontend_custom_domain The public subdomain for the frontend service <code>string</code> n/a yes frontend_image_name The repository name and tag for the frontend container. <code>string</code> n/a yes location Azure region <code>string</code> <code>\"uksouth\"</code> no prefix Prefix for resource names <code>string</code> <code>\"s213\"</code> no product Name of the project <code>string</code> <code>\"Find Education and Training\"</code> no sql_admin_password The administrator password of the SQL logical server. <code>string</code> <code>null</code> no sql_admin_username The administrator username of the SQL logical server. <code>string</code> <code>\"azureadmin\"</code> no support_alert_email Alert support email or group <code>string</code> n/a yes"},{"location":"architecture/Terraform/#outputs","title":"Outputs","text":"Name Description admin_url n/a api_url n/a azurerm_network_security_group Network security group name azurerm_private_dns_zone Private DNS Zone name azurerm_private_dns_zone_virtual_network_link Private DNS Zone Virtual Network Link name azurerm_subnet Subnet name azurerm_virtual_network Virtual network name frontend_url n/a mssql_database_name The name of the SQL Database mssql_server_fqdn The fully qualified domain name of the SQL Server mssql_server_name The name of the SQL Server"},{"location":"architecture/Volumetrics/","title":"Volumetrics","text":""},{"location":"architecture/Volumetrics/#introduction","title":"Introduction","text":"<p>It is important to understand the Volumetrics of the Care Leavers website to ensure that the website can handle the expected traffic without degradation in performance, without incurring unnecessary Azure costs.</p> <p>This is a new site, so no historical data is available. However, we can make estimates based on data from other similar GovUK sites.</p>"},{"location":"architecture/Volumetrics/#projected-volumetrics","title":"Projected Volumetrics","text":"<p>The assumptions will be based on 1,000 users per month, so roughly 33 users per day. We can make reasonable assumptions that the site will be operating during UK day time hours, with increased usage during work hours due to access by intermediaries. Therefore, we can make an assumption of around 10 users per hour at peak times.</p> <p>Assuming a user session lasts roughly 5 minutes: 300 * 10 = 30 concurrent requests.</p> <p>During spike times, we expect around x3 this amount (such as when comms have been sent out).</p> Test Type Concurrent Users Requests per second Normal 30 ~3 requests/sec Spike 90 ~9 requests/sec Stress 150 ~15 requests/sec"},{"location":"architecture/adr/001-azure-elz-terraform-subnet-workaround/","title":"Decision - 0001 - Azure ELZ Terraform Subnet Workaround","text":""},{"location":"architecture/adr/001-azure-elz-terraform-subnet-workaround/#context-and-problem-statement","title":"Context and Problem Statement","text":"<p>When deploying to the Enterprise Landing Zone (ELZ) we encountered a major blocker: a policy repeatedly caused our Terraform infrastructure deployment to fail. There was considerable trial and error based on research and colleagues\u2019 suggestions.</p> <p>We found that:</p> <ul> <li>The subnet resource was being rejected due to the following policy:</li> </ul> <p></p> <ul> <li> <p>To resolve this, it was suggested to use the property below (however, in the current Terraform provider it has been deprecated): <pre><code>resource \"azurerm_subnet\" \"gettoananswer-subnet\" {\n  ...\n  network_security_group_id = azurerm_network_security_group.gettoananswer-nsg.id\n  ...\n}\n</code></pre></p> </li> <li> <p>Another suggestion was to use association resource, but this was also unsuccessful:</p> </li> </ul> <pre><code>resource \"azurerm_subnet_network_security_group_association\" \"default\" {\n  subnet_id                 = azurerm_subnet.gettoananswer_main_subnet.id\n  network_security_group_id = azurerm_network_security_group.gettoananswer-nsg.id\n}\n</code></pre> <p>As part of further investigations, we noted that:</p> <ul> <li>The issue was ELZ-specific and a bug was raised to fix it, so an exemption or workaround was required.</li> </ul>"},{"location":"architecture/adr/001-azure-elz-terraform-subnet-workaround/#considered-options","title":"Considered Options","text":"<ul> <li>Use the AzAPI provider to customise the creation of the subnet.</li> <li>Use click-ops to create the subnet with the association, then import the resource to complete provisioning.</li> <li>Use a custom provider to implement the creation based on the open PR fix here.</li> <li>Add an exception to the policy.</li> <li>Ask ELZ admins to change the policy effect from <code>deny</code> to <code>audit</code>.</li> </ul>"},{"location":"architecture/adr/001-azure-elz-terraform-subnet-workaround/#evaluation","title":"Evaluation","text":"Criteria Comment AzAPI Click-ops Custom Exemption Alter Policy Automatable Can be implemented in IaC and automated across environments. 5 0 5 1 1 Repeatable Can other teams leverage this solution/workaround for their use cases too? 5 2 4 3 3 Effort How easy is it to set up/configure and deploy? 5 3 3 1 1 Error Resistant Can human error be avoided/mitigated via this approach? 5 1 4 4 4 Total 20 7 16 9 9"},{"location":"architecture/adr/001-azure-elz-terraform-subnet-workaround/#decision-outcome","title":"Decision Outcome","text":"<p>Based on the analysis above, we chose to switch to AzAPI, as it required the least effort, was easily repeatable by other teams, and did not require admin support.</p> <p>With the AzAPI resource we can create the subnet and then associate it with a network security group.</p> <p>This is the replacement (AzAPI) resource:</p> <pre><code>resource \"azapi_resource\" \"gettoananswer_main_subnet\" {\n  type      = \"Microsoft.Network/virtualNetworks/subnets@2024-05-01\"\n  name      = \"${var.prefix}subnet-uks-gtaa\"\n  parent_id = azurerm_virtual_network.gettoananswer_vnet.id\n\n  body =  {\n    properties = {\n      addressPrefixes = [...]\n      delegations = [{\n        name = \"asp-delegation\"\n        properties = {\n          serviceName = \"Microsoft.Web/serverFarms\"\n        }\n      }]\n      serviceEndpoints = [\n        {\n          service   = \"Microsoft.Sql\"\n          locations = [azurerm_resource_group.gettoananswer-rg.location]\n        }\n      ]\n      # the association with the network security group\n      networkSecurityGroup = {\n        id = azurerm_network_security_group.gettoananswer-nsg.id\n      }\n    }\n  }\n\n  depends_on = [azurerm_network_security_group.gettoananswer-nsg]\n}\n</code></pre>"},{"location":"architecture/adr/001-azure-elz-terraform-subnet-workaround/#considerations-on-selected-technology","title":"Considerations on selected technology","text":"<p>Due to the flexibility of the <code>azapi_resource</code>, you'll have to periodically check when changes are made to the resource attributes and change according, because <code>terraform validation</code> doesn't flag this.</p>"},{"location":"developers/Branching-Strategy/","title":"Branching strategy and code quality","text":""},{"location":"developers/Branching-Strategy/#branching-strategy","title":"Branching strategy","text":"<p>This project uses the Trunk Based Development branching strategy. This strategy seeks to avoid long-running feature/release branches and all work is based on <code>main</code>.</p> <p>Small tweaks and chore work can be done directly on <code>main</code> but more complex features including logic should be done in a feature branch and merged back into <code>main</code> via a pull request.</p> <p>Long-running feature branches that drift too far from <code>main</code> should be avoided to avoid merge conflicts.</p> <p>Feature branches should be squashed and rebased onto main before being fast-forwarded into main. This ensures an easy-to-follow git history and avoids merge commits.</p>"},{"location":"developers/Branching-Strategy/#code-quality-and-rules","title":"Code quality and rules","text":"<p>Before pushing to main/raising a pull request, ensure the following: - The build is passing and any relevant tests are passing. - The code is formatted correctly. - Errant comments and debug code are removed.</p> <p>The following checks/actions run on every pull request or main push:</p> <ul> <li>Web .NET Build - Builds the solution and runs unit/integration tests. Pass or fail.</li> <li>SonarCloud - Static code analysis with a pre-configured quality gate (Note: Currently under review)</li> <li>Web E2E Tests - Runs the end-to-end tests against the deployed site. Pass or fail. (In development)</li> </ul>"},{"location":"developers/Development-Process/","title":"Development Process","text":"<p>These are the preliminary development processes for developers and QAs. These processes are subject to continuous changes so it's advice to frequently review it for changes.</p>"},{"location":"developers/Development-Process/#developer-development-process","title":"Developer Development Process","text":"<ol> <li>Pick up ticket (3 amigos; optional)</li> <li>Define branch.    <pre><code>Format:\n\ne.g.\n\nfeat/CARE-XXX/focus\nbug/CARE-XXX/focus\n</code></pre></li> <li>Run tests to make sure you know everything is working before you start.</li> <li>Implement the necessary changes<ol> <li>Content wise via Contentful development environment</li> <li>Content type wise via migration scripts. File name format: <code>00XX-description.cjs</code></li> <li>Html changes via .cshtml</li> <li>Css class attachment to content types via .cshtml or ContentRenderer classes</li> </ol> </li> <li>Implement playwright tests and fix broken tests</li> <li>Commit changes<ol> <li>Message format:    <pre><code>CARE-XXX {message}\n\n{details}\n</code></pre></li> </ol> </li> <li>Create pull request</li> <li>Update e2e contentful environment<ol> <li>Use <code>Deploy - Contentful Migrations</code> to run the new script in the e2e environment, use your branch as the source code</li> <li>Use <code>Deploy - Environment</code> to deploy the code changes made outside of the migration scripts</li> <li>Manually update content added in development to e2e</li> </ol> </li> <li>Rerun the checks in pull request, if failed due content differences in e2e environment</li> <li>When pull request has been approved and merged, do step 8 for the test environment</li> <li>Move the ticket to the Jira <code>Test</code> column and inform Imran</li> <li>Imran manual tests to see if the acceptance criteria was met.</li> <li>Once Imran has signed off.</li> <li>Update <code>production</code> contentful environment<ol> <li>Use <code>Deploy - Contentful Migrations</code> to run the new script in the production environment, use your branch as the source code</li> <li>Use <code>Deploy - Environment</code> to deploy the code changes made outside of the migration scripts to the <code>staging</code> azure instance (staging uses published/draft pages in contentful)</li> <li>Use <code>Deploy - Environment</code> to deploy the code changes made outside of the migration scripts to the <code>production</code> azure instance (potentially; only uses published pages in contentful)</li> </ol> </li> <li>Inform Amy Leak in the Care Leavers MS Teams group chat, that the code changes have been deployed ready for her to apply the content changes.</li> </ol>"},{"location":"developers/Development-Process/#qa-test-suite-development-process","title":"QA Test Suite Development Process","text":"<ol> <li>Define or Pick up ticket in Jira Test column<ol> <li>Subtask to fix related tests (Ideally the responsibility of the Devs).</li> <li>Define general test fix, load testing, etc. ticket(s).</li> </ol> </li> <li>Move Jira ticket the 'In Progress'.</li> <li>Define branch. Format:</li> <li>task/CARE-XXX/{focus} (for test fixes, modifications, etc.)</li> <li>test/CARE-XXX/{focus} (for running complex tests, e.g. performance, load, security, etc. testing)</li> <li>Implement the necessary changes</li> <li>Add test modifications</li> <li>Potentially, update Contentful development, e2e and/or test environments</li> <li>Commit changes</li> <li>Message format: \"CARE-XXX {message}\"</li> <li>Create pull request</li> <li>Move Jira ticket the 'Ready for Review (Tech)'.</li> <li>Pull request approved and merged, by at least a Dev, QA or Technical Architecture</li> <li>Mark ticket as 'Done'.site. Pass or fail. (In development)</li> </ol>"},{"location":"developers/Project-Setup/","title":"Project Setup","text":"<p>This repository contains a multi-project .NET 9 solution with three web applications (API, Admin, Frontend), a shared Common library, automated tests, infrastructure-as-code, and developer documentation.</p>"},{"location":"developers/Project-Setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>.NET SDK 9.x</li> <li>Node.js 18+ with npm (for Admin/Frontend assets and E2E tests)</li> <li>Docker Desktop (for local compose and E2E)</li> <li>Azure CLI and Terraform/OpenTofu (for infrastructure workflows, optional)</li> <li>Git</li> </ul>"},{"location":"developers/Project-Setup/#solution-structure-high-level","title":"Solution structure (high level)","text":"<ul> <li>src/<ul> <li>Api \u2014 backend HTTP services</li> <li>Admin \u2014 back-office management UI</li> <li>Frontend \u2014 public-facing questionnaire site</li> <li>Common \u2014 shared domain and infrastructure code</li> <li>Infrastructure \u2014 Terraform and local Docker Compose</li> <li>e2e \u2014 end-to-end tests</li> </ul> </li> <li>tests/<ul> <li>Unit.Tests \u2014 unit tests</li> <li>Integration.Tests \u2014 integration tests</li> </ul> </li> <li>docs/ \u2014 documentation and developer guides</li> </ul> <p>Refer to each project\u2019s README for details.</p>"},{"location":"developers/Project-Setup/#running-locally","title":"Running locally","text":"<p>Option A: Run via IDE - Restore and build the solution. - Start the API, then Admin and Frontend. - Ensure Admin/Frontend are configured to call the API base URL from appsettings.Local.json.</p> <p>Option B: Run via Docker Compose - Copy Infrastructure/.env.example to .env and adjust values as needed. - From src/Infrastructure run:     - docker compose -f compose.yaml up --build - Services will be available at the ports defined in compose.yaml.</p>"},{"location":"developers/Project-Setup/#configuration","title":"Configuration","text":"<ul> <li>Each app has appsettings.*.json files. For local development, use appsettings.Local.json (not committed).</li> <li>Typical settings include API base URLs, database connection strings, and feature flags.</li> <li>Keep secrets out of source control; use environment variables or local user secrets when not using Docker.</li> </ul>"},{"location":"developers/Project-Setup/#end-to-end-tests","title":"End-to-end tests","text":"<p>We provide Playwright-based E2E tests that run against a locally hosted site or containers.</p> <p>Recommended workflow: - Build local images and run the local compose stack (see \u201cRunning locally \u2014 Docker Compose\u201d). - From the E2E project folder, install and run tests:     - npm ci     - npx playwright install     - npx playwright test - To view failures:     - npx playwright show-report</p> <p>Note: Stop any conflicting local instances before running against containers to avoid port clashes.</p>"},{"location":"developers/Project-Setup/#testing-unit-and-integration","title":"Testing (unit and integration)","text":"<ul> <li>From the repo root:<ul> <li>dotnet test</li> </ul> </li> <li>Integration tests may rely on local configuration (see tests/Integration.Tests/appsettings.LocalTest.json). Ensure the API and any required services are reachable or use the compose stack.</li> </ul>"},{"location":"developers/Project-Setup/#infrastructure","title":"Infrastructure","text":"<p>Infrastructure (Azure resources, networking, and app hosting) is defined under src/Infrastructure/terraform and deployed via CI/CD. Local development does not require provisioning cloud resources.</p> <ul> <li>To experiment locally with IaC workflows:<ul> <li>Ensure Azure CLI authentication.</li> <li>Use terraform init/plan/apply with a non-shared state backend if testing outside CI.</li> </ul> </li> <li>Do not commit local state or secrets.</li> </ul>"},{"location":"developers/Project-Setup/#developer-workflows","title":"Developer workflows","text":"<ul> <li>Branching and release processes are documented in docs/developers.</li> <li>CI pipelines validate code quality, run tests, and build container images.</li> <li>Application deploy workflows target environments using tagged images.</li> </ul>"},{"location":"developers/Project-Setup/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Port conflicts: stop existing instances or adjust compose/launch settings.</li> <li>SSL locally: verify HTTPS ports and certificates where applicable, or use HTTP for local if configured.</li> <li>Frontend/Admin cannot reach API: confirm API base URL and CORS settings in appsettings.Local.json or environment variables.</li> <li>Playwright issues: run npx playwright install and ensure services are reachable before tests.</li> </ul>"},{"location":"developers/Project-Setup/#references","title":"References","text":"<ul> <li>API: src/Api/README.md</li> <li>Admin: src/Admin/README.md</li> <li>Frontend: src/Frontend/README.md</li> <li>Common: src/Common/README.md</li> <li>Infrastructure: src/Infrastructure/README.md</li> <li>E2E: src/e2e/README.md (or the E2E project README within src/e2e)</li> </ul>"},{"location":"developers/Release-Process/","title":"Release Process","text":"<p>This document outlines the process for deploying the application to the Test and Production environments.</p>"},{"location":"developers/Release-Process/#automated-deployments-to-test","title":"Automated Deployments to Test","text":"<p>When a pull request is merged into the <code>main</code> branch, the following actions are automatically triggered:</p> <ol> <li>New Tag Creation: The workflow finds the most recent tag (e.g., <code>v1.2.3</code>), increments it (to <code>v1.2.4</code>), and applies it to the merge commit.</li> <li>Deployment to Test: The newly tagged version is automatically deployed to the Test environment.</li> <li>Contentful Migrations: Any new Contentful migrations are also deployed to the Test environment.</li> </ol> <p>This process ensures that the Test environment always reflects the latest version of the <code>main</code> branch.</p>"},{"location":"developers/Release-Process/#deployments-to-environments","title":"Deployments to environments","text":"<p>Deployments to the Production environment are manual. The primary method is by creating a new release in GitHub.</p>"},{"location":"developers/Release-Process/#1-create-a-github-release-primary-method","title":"1. Create a GitHub Release (Primary Method)","text":"<p>This is the standard way to deploy a version that has been fully validated in the Test environment.</p> <ol> <li>Choose a Version: Identify the tag you want to release to production (e.g., <code>v1.2.4</code>).</li> <li>Create a New Release:<ul> <li>Navigate to the Releases page in the GitHub repository.</li> <li>Click Draft a new release.</li> <li>Select the tag you want to deploy from the Choose a tag dropdown.</li> <li>Add a title and description for the release notes.</li> <li>Click Publish release.</li> </ul> </li> <li>Automatic Deployment: Publishing the release automatically triggers the deployment workflow to the Production environment.</li> </ol>"},{"location":"developers/Release-Process/#2-manual-workflow-dispatch-if-you-just-want-to-deploy-latest-version-of-main-alternative-method","title":"2. Manual Workflow Dispatch - if you just want to deploy latest version of Main (Alternative Method)","text":"<p>You can also trigger a deployment manually without creating a formal release. This is useful for hotfixes or special circumstances.</p> <ol> <li>Navigate to the Actions tab in the GitHub repository.</li> <li>In the left sidebar, find and click on the Deploy - Environment workflow.</li> <li>Click the Run workflow dropdown button, which appears on the right side of the page.</li> <li>Select the branch you want to run the Workflow from or select the specific tag version (e.g., <code>v1.2.5</code>), the environment you want to deploy and if you want to Clear Cache. </li> <li>Click the green Run workflow button to start the deployment.</li> </ol>"},{"location":"high-level/Proposal-Summary/","title":"Comparison: \u201cGet to an answer\u201d service vs Riddle, for Care Leavers","text":""},{"location":"high-level/Proposal-Summary/#summary","title":"Summary","text":"<ul> <li>Recommendation: Migrate to \u201cGet to an answer\u201d for improved accessibility, integration, control, and cost-efficiency, with a simpler authoring model aligned to GOV.UK and DfE standards.</li> </ul> <p>1) Purpose and fit - Riddle: General-purpose quiz/survey/assessment builder with hosted deployment and embed options. Optimized for marketing and lead capture; adaptable for decision trees but not purpose-built. - Get to an answer: Purpose-built decision/triage flow tool aligned to GOV.UK patterns, designed to guide users to actionable outcomes within DfE services and sites.</p> <p>2) Accessibility - Riddle: Claims WCAG support but varies by theme and embed; customization can introduce accessibility debt; limited control over underlying markup. - Get to an answer: Uses GDS Design System components/patterns, supports AAA-aligned implementations, standard keyboard navigation, ARIA semantics, error summaries, and consistent heading structures.</p> <p>3) Integration and rendering - Riddle: Primarily iframe/embed or hosted links; limited server-side rendering control; translation typically handled outside with duplicated flows or per-variant content. - Get to an answer: API-first; render natively in product/site (SSR-friendly). Enables:     - Central content model with on-site rendering     - Integrated translation/localisation pipelines (potentially)     - Shared analytics, consent, and cookies policies     - Consistent design system and routing</p> <p>4) Auth and management - Riddle: Separate account system; SSO varies by plan; admin management outside DfE tenant. - Get to an answer: Integrates with DfE O365 login (Azure AD), enabling:     - Centralised account lifecycle     - Role-based access with DfE groups     - Reduced onboarding/offboarding friction     - Audit and compliance within DfE</p> <p>5) Costs and licensing - Riddle: Ongoing per-seat or tiered plan costs; additional charges for advanced features/SSO; vendor lock-in. - Get to an answer: Reduced ongoing licensing; internal hosting and open standards; costs primarily in development and platform ops, amortised across services.</p> <p>6) Flow design and authoring - Riddle: Visual builder for quizzes/surveys; branching supported but can be complex; decision logic embedded in tool-specific UI; portability limited. - Get to an answer: Simplified flow model aligned to GOV.UK decision tree conventions:     - Clear node/edge content model     - Reusable components, conditional logic, and outcomes     - Versioning and change control suited to service design     - Easier maintenance by service teams</p> <p>7) Content governance and versioning - Riddle: Version history varies; publishing workflows basic; content export limited to vendor formats. - Get to an answer: Designed to work with DfE workflows:     - Git-backed or API-based versioning     - Environments (dev/test/prod)     - Review/approval gates and audit trails</p> <p>8) Data, privacy, and compliance - Riddle: Data processed within vendor infrastructure; DPIA and DPA required; cookie and analytics vary by embed mode. - Get to an answer: Data remains within DfE boundaries; simpler DPIA; conforms to existing cookies/analytics frameworks; easier to meet GOV.UK and DfE data policies.</p> <p>9) Performance and reliability - Riddle: Dependent on third-party uptime and CDN; performance of embeds can vary. - Get to an answer: First-party hosting and caching; tighter control of performance budgets, error handling, and observability.</p> <p>10) Analytics and insights - Riddle: Built-in analytics biased toward marketing metrics; custom events require workarounds. - Get to an answer: Native integration with DfE/GOV.UK analytics; granular event tracking aligned to service KPIs; easier funnel analysis across journeys.</p> <p>11) Theming and UX consistency - Riddle: Theming via templates; limited fidelity to GOV.UK standards; risk of \u201cnon-GOV\u201d look/feel. - Get to an answer: Native GOV.UK styles and components; consistent typography, spacing, and error states.</p> <p>12) Internationalisation and translation - Riddle: Usually duplicate flows per language; limited translation workflow integration. - Get to an answer: API-driven rendering enables language switching on-site; integrate with translation memory and content pipelines; single source with locale overlays.</p> <p>13) Vendor lock-in and portability - Riddle: Logic and content locked to vendor; exports partial. - Get to an answer: Content and logic represented in open, internal formats; portable across DfE services.</p> <p>14) Risks and mitigations - Ongoing maintenance: This will sit under DesignOps so technical documentation needs to be robust. - Initial migration effort: Mitigate with staged migration, parity checks, and dual-run testing. - Authoring training: Provide concise guidance and templates aligned to GOV.UK patterns.</p>"},{"location":"high-level/Proposal-Summary/#decision-drivers-from-care-leavers","title":"Decision drivers (from Care Leavers)","text":"<ul> <li>AAA accessibility via GDS components</li> <li>API rendering for on-site integration and translation</li> <li>DfE O365 SSO for simple management</li> <li>Reduced licensing costs</li> <li>Simplified, maintainable flow system</li> </ul>"},{"location":"high-level/Proposal-Summary/#recommendation","title":"Recommendation","text":"<ul> <li>Proceed with migration to \u201cGet to an answer.\u201d</li> <li>Pilot: Migrate one representative Care Leavers flow end-to-end, validate accessibility, analytics, and translation.</li> <li>Rollout: Migrate remaining flows with a standardised template, shared components, and a deprecation plan for Riddle embeds.</li> <li>Governance: Establish content versioning, release process, and ownership within the Care Leavers team.</li> </ul>"},{"location":"high-level/Proposal-Summary/#glossary","title":"Glossary","text":"<ul> <li>SSR: Server-side rendering</li> <li>API: Application Programming Interface</li> <li>SSO: Single Sign-On</li> <li>AAA: Accessibility, Usability, and Accessibility</li> <li>GDS: Government Digital Service</li> <li>DfE: Department for Education</li> <li>DPA: Data Protection Act</li> <li>DPIA: Data Protection Impact Assessment</li> <li>DPA: Data Protection Act</li> <li>DPIA: Data Protection Impact Assessment</li> </ul>"},{"location":"high-level/Requirements/","title":"GTAA Requirements Document","text":""},{"location":"high-level/Requirements/#objectives","title":"Objectives","text":"<ul> <li>Provide a public-facing questionnaire experience that guides users from a start page through sequential questions to custom information pages or external destinations.</li> <li>Provide an admin console to plan, create, edit, preview, version, and publish questionnaires, including content, support details, and privacy information.</li> <li>Align with to the DfE Standards and GOV.UK Design System patterns for usability and accessibility.</li> </ul>"},{"location":"high-level/Requirements/#stakeholders","title":"Stakeholders","text":"<ul> <li>Public Users: complete the questionnaire, receive guidance and support.</li> <li>Content Designers/Admins: configure questionnaires, content, routing, and publication lifecycle.</li> <li>Service Owners: ensure compliance, accessibility, and reliability.</li> <li>Technical Team: build, operate, support the platform and integration into their own systems (via the api).</li> </ul>"},{"location":"high-level/Requirements/#user-personas-and-needs","title":"User Personas and Needs","text":"<ul> <li>Public User<ul> <li>Understand purpose and how data is used.</li> <li>Answer one question per page with clear guidance and validation.</li> <li>Be routed to appropriate next steps or external services.</li> <li>Access support information at any time.</li> </ul> </li> <li>Admin/Designer<ul> <li>Create and manage questionnaires, questions, answers, and routing.</li> <li>Manage start page content, slugs/URLs, reusable content blocks.</li> <li>Configure support and privacy information.</li> <li>Preview journeys and publish with version control and change history.</li> <li>Manage contributors and permissions.</li> </ul> </li> <li>Developers<ul> <li>Integrate questionnaire experience into their own systems.</li> <li>Integrate the platform with their contentful and CMS systems.</li> </ul> </li> </ul>"},{"location":"high-level/Requirements/#scope","title":"Scope","text":"<ul> <li>In-Scope<ul> <li>Public site: start page, question pages (one question per page), validation, routing to destinations, support and privacy pages.</li> <li>Admin: CRUD for questionnaires, questions, answers, content; routing configuration; preview; publish/unpublish/clone/delete; version history; contributors.</li> <li>Accessibility, analytics hooks, basic auditing.</li> <li>Contentful integration to load questionnaire iframes into their own pages.</li> <li>Open API service for self service integration.</li> <li>Questionnaire iframe for self service integration.</li> </ul> </li> <li>Nice to have:<ul> <li>Custom content pages (reusable content blocks).</li> <li>Support and privacy pages with contact details and privacy policy.</li> </ul> </li> <li>Out-of-Scope<ul> <li>Payments, identity verification, complex reporting dashboards, multilingual content (unless specified), advanced conditional logic beyond defined routing rules.</li> </ul> </li> </ul>"},{"location":"high-level/Requirements/#functional-requirements","title":"Functional Requirements","text":""},{"location":"high-level/Requirements/#frontend-public-questionnaire","title":"Frontend - Public Questionnaire","text":"<ul> <li>Questionnaire IFrame<ul> <li>Embed questionnaire iframe into a page manually or via a CMS integration.</li> </ul> </li> <li>Start Page<ul> <li>Display title, description, what to expect, and start button.</li> <li>Link to support and privacy information.</li> </ul> </li> <li>Question Pages<ul> <li>One question per page, using appropriate component types (e.g., radios, checkboxes, inputs) per GOV.UK Design System.</li> <li>Show hint/help text and optional guidance content.</li> <li>Validate inputs (required, type/format, option constraints) with error summaries.</li> <li>Persist answers per session and allow back navigation.</li> </ul> </li> <li>Routing and Destinations<ul> <li>Configure next question or destination per answer selection.</li> <li>Support branch/skip logic and terminal outcomes (custom page or external link).</li> <li>Display result page content or redirect externally with parameters where needed.</li> </ul> </li> <li>Support and Privacy<ul> <li>Dedicated pages with contact details and privacy policy.</li> <li>Accessible from start and throughout the flow.</li> </ul> </li> <li>Session Management<ul> <li>Anonymous session for answers; timeout handling and restart option.</li> </ul> </li> <li>Accessibility<ul> <li>WCAG 2.2 AA alignment; semantic markup; keyboard operability; focus management; error messaging; ARIA where needed.</li> </ul> </li> </ul>"},{"location":"high-level/Requirements/#admin-console","title":"Admin Console","text":"<ul> <li>Authentication/Authorisation<ul> <li>Secure access; invitation based permissions (Admin &lt;=&gt; Editor).</li> </ul> </li> <li>Questionnaire Management<ul> <li>List, filter, and search questionnaires by status (draft/published).</li> <li>Create, edit metadata (titles, descriptions), clone, delete (soft delete).</li> </ul> </li> <li>Start Page and Slug<ul> <li>Configure entry content, guidance, and public slug/URL.</li> </ul> </li> <li>Questions and Answers<ul> <li>Add/edit/delete questions; order and group them.</li> <li>Configure answer options, destinations (routing; question, external link and custom page).</li> <li>Support common types (single-select, multi-select and dropdown options).</li> </ul> </li> <li>Custom Content Pages (nice to have)<ul> <li>Create/edit reusable content (help/guidance/partials) for insertion in pages.</li> </ul> </li> <li>Support &amp; Privacy Configuration<ul> <li>Define support contact details (email, phone, hours, links).</li> <li>Maintain privacy statements and versioning notes.</li> </ul> </li> <li>Preview<ul> <li>Simulate user journey with current draft configuration, including routing.</li> </ul> </li> <li>Publication Lifecycle<ul> <li>Publish/unpublish with a version snapshot and changelog.</li> <li>View version history and diffs between versions.</li> </ul> </li> <li>Contributors<ul> <li>Invite/manage contributors; show audit trail of changes.</li> </ul> </li> <li>Version Control<ul> <li>Track changes to questionnaire configuration.</li> <li>View diff between versions.</li> <li>Revert to previous version.</li> <li>Unpublish to revert to previous state.</li> <li>Clone to create a new draft.</li> <li>Delete (soft delete) to remove from the platform.</li> </ul> </li> <li>Customise Branding and Theme</li> <li>Questionnaire button text, page font, colour palettes, logo, etc.</li> </ul>"},{"location":"high-level/Requirements/#api-service","title":"API Service","text":"<ul> <li>Authentication/Authorisation<ul> <li>Secure access.</li> </ul> </li> <li>Open API (open to DfE)<ul> <li>Expose questionnaire configuration via an open API service.</li> </ul> </li> </ul>"},{"location":"high-level/Requirements/#non-functional-requirements","title":"Non-Functional Requirements","text":"<ul> <li>Accessibility: PA11y</li> <li>Availability: 99.9% for public experience; scheduled maintenance windows communicated.</li> <li>Security: OWASP ASVS L2; protect against XSS, CSRF, SSRF, injection; secure headers; secrets management.</li> <li>Privacy: Data minimisation; clear privacy notice; retention policy; DPIA where required.</li> <li>Observability: Structured logs with correlation IDs; basic metrics (traffic, completion rate, errors); alerting on error rates and latency.</li> <li>Scalability: Handle expected concurrency spikes; horizontal scaling.</li> <li>Compliance: Adhere to GOV.UK Design System and service standards.</li> </ul>"},{"location":"high-level/Requirements/#content-and-design-requirements","title":"Content and Design Requirements","text":"<ul> <li>Use GOV.UK Design System components for:<ul> <li>Start page pattern, radios, checkboxes, inputs, error summary, back link, buttons.</li> </ul> </li> <li>One question per page pattern; clear page titles; progressive disclosure where appropriate.</li> <li>Plain language; helper text for complex questions; consistent tone.</li> </ul>"},{"location":"high-level/Requirements/#data-model-conceptual","title":"Data Model (conceptual)","text":"<ul> <li>Questionnaire: id, slug, title, description, status, versions.</li> <li>QuestionnaireVersion: version number, created by, created at, changelog, published flag.</li> <li>Question: id, questionnaireId, type, prompt, hint, order, validation rules.</li> <li>Answer: id, questionId, label, value, nextDestination (questionId or external).</li> <li>Content: id, key, body, format.</li> <li>Audit: entityId, entityType, action, actor, timestamp, diff.</li> </ul>"},{"location":"high-level/Requirements/#routing-logic-requirements","title":"Routing Logic Requirements","text":"<ul> <li>Each answer option may define:<ul> <li>Each answer is score for multi-selection, so the selected answer with the highest score to dictates the next route.</li> <li>Next question ID OR custom content page ID OR external URL.</li> </ul> </li> <li>Terminal outcomes:<ul> <li>Custom page content OR redirect to external URL, both with relevant guidance and support.</li> </ul> </li> <li>Validation ensures no orphan questions or dead ends or cycles.</li> </ul>"},{"location":"high-level/Requirements/#error-handling","title":"Error Handling","text":"<ul> <li>Public<ul> <li>Input validation errors with inline messages and error summary.</li> <li>Friendly error page for 404/500 with support contact.</li> </ul> </li> <li>Admin<ul> <li>Form-level validation; conflict handling on concurrent edits; descriptive error messages.</li> </ul> </li> </ul>"},{"location":"high-level/Requirements/#analytics-and-telemetry","title":"Analytics and Telemetry","text":"<ul> <li>Page views and drop-off points.</li> <li>Answered vs skipped (where applicable).</li> <li>Outcome distribution (without PII).</li> <li>Admin actions audit trail.</li> </ul>"},{"location":"high-level/Requirements/#security-and-privacy","title":"Security and Privacy","text":"<ul> <li>DfE SSO; strong auth; session timeout; CSRF protection.</li> <li>Public: no data collection; consent where tracking is used; cookie banner if applicable.</li> <li>Secrets via environment configuration; rotation policy.</li> </ul>"},{"location":"high-level/Requirements/#release-and-versioning","title":"Release and Versioning","text":"<ul> <li>Draft \u2192 Preview \u2192 Publish (immutable snapshot).</li> <li>Unpublish reverts public endpoint to previous version or offline state.</li> <li>Version diff to highlight changes (content, routing, validation).</li> </ul>"},{"location":"high-level/Requirements/#operational-requirements","title":"Operational Requirements","text":"<ul> <li>Environments: Dev, Test, Staging, Production.</li> <li>Configuration via environment variables.</li> <li>Automated tests: unit, integration, e2e for critical paths (start \u2192 outcome).</li> <li>Backups for configuration datastore; recovery procedures documented.</li> </ul>"},{"location":"high-level/Requirements/#acceptance-criteria-high-level","title":"Acceptance Criteria (high level)","text":"<ul> <li>Public journey<ul> <li>Given a published questionnaire, when a user starts, they can complete a path to a valid destination with correct routing.</li> <li>Validation errors are shown per design system; accessibility checks pass key flows.</li> </ul> </li> <li>Admin<ul> <li>Can create a questionnaire, add questions and routing, preview, and publish.</li> <li>Version history records changes; diff view available; unpublish works.</li> </ul> </li> <li>Compliance<ul> <li>Pages meet GOV.UK Design System patterns; axe checks show no critical violations.</li> </ul> </li> </ul>"},{"location":"high-level/Requirements/#risks-and-mitigations","title":"Risks and Mitigations","text":"<ul> <li>Misconfigured routing causing dead ends \u2192 Pre-publish validation and graph checks.</li> <li>Accessibility regressions \u2192 CI accessibility tests and design review.</li> <li>Content sprawl/duplicates \u2192 Reusable content blocks and governance.</li> <li>PII leakage \u2192 Data minimisation, privacy reviews, and log scrubbing.</li> </ul>"},{"location":"high-level/Requirements/#future-enhancements","title":"Future Enhancements","text":"<ul> <li>Advanced logic (multi-criteria branching).</li> <li>Multilingual content.</li> <li>Exportable analytics reports.</li> <li>Integration with identity or CRM systems.</li> <li>A/B testing on content variants.</li> </ul>"},{"location":"high-level/Requirements/#glossary","title":"Glossary","text":"<ul> <li>Questionnaire: A collection of questions and routes leading to outcomes.</li> <li>Outcome/Destination: Final step for a branch, either a custom page or external link.</li> <li>Custom Content Pages: Custom pages hosted by this service to help provide additional relevant content to service users.</li> <li>Version: Immutable snapshot of a questionnaire\u2019s configuration at publication.</li> </ul>"},{"location":"operational/Design-System-Changes-Jun-2025/","title":"Design System Changes - June 2025","text":""},{"location":"operational/Design-System-Changes-Jun-2025/#overview","title":"Overview","text":"<p>The site has been developed to take into account the GOVUK and DfE Branding changes that are due to be launched on June 25th 2025.</p>"},{"location":"operational/Design-System-Changes-Jun-2025/#activating-the-new-branding","title":"Activating the new branding","text":"<p>The rebrand can be activated in one of two ways:</p> <ul> <li>If the current date is greater than, or equal to: June 25th 2025</li> <li>The parameter <code>REBRAND</code> is set to true within GitHub Actions and the site is redeployed</li> </ul>"},{"location":"operational/Design-System-Changes-Jun-2025/#testing","title":"Testing","text":"<p>The rebrand is active in both Integration and End-to-End testing to ensure that the tests don't break after the rebrand occurs.</p>"},{"location":"operational/Disaster-Recovery/","title":"Disaster Recovery","text":""},{"location":"operational/Disaster-Recovery/#overview","title":"Overview","text":"<p>This document outlines how the platform is restored or operated during incidents affecting application availability or hosting infrastructure.</p>"},{"location":"operational/Disaster-Recovery/#hosting-footprint-azure","title":"Hosting footprint (Azure)","text":"<p>Services run on Azure and are provisioned via Infrastructure as Code. Typical components include: - Azure App Service (API, Admin, Frontend) - Azure networking and supporting resources - Azure SQL (or equivalent data persistence if configured) - Container Registry and CI/CD pipelines</p> <p>Most application components are stateless containers. Persistent state (e.g., database) must be recoverable via standard backup/restore procedures.</p>"},{"location":"operational/Disaster-Recovery/#recovery-principles","title":"Recovery principles","text":"<ul> <li>Reprovision quickly using IaC.</li> <li>Restore minimal viable service first (API, then Frontend/Admin).</li> <li>Keep secrets out of repos; reconfigure via environment variables or secure stores.</li> <li>Validate health endpoints before reopening traffic.</li> </ul>"},{"location":"operational/Disaster-Recovery/#scenarios-and-actions","title":"Scenarios and actions","text":"<ul> <li> <p>App Service or container failure</p> <ul> <li>Redeploy the affected app via CI/CD.</li> <li>If platform issue persists, recreate the Web App and rebind configuration.</li> <li>Verify health checks and application logs.</li> </ul> </li> <li> <p>Region/resource outage</p> <ul> <li>Recreate infrastructure in the same or alternate region using IaC variables (based DfE ELZ teams recommendations).</li> <li>Re-deploy images from the container registry.</li> <li>Update DNS or traffic manager/front-door targets if endpoints change.</li> </ul> </li> <li> <p>Database unavailability or corruption</p> <ul> <li>Failover to secondary (if configured) or perform point-in-time restore.</li> <li>Re-point connection strings and run health checks.</li> <li>Validate application read/write paths.</li> </ul> </li> <li> <p>Configuration or secret loss</p> <ul> <li>Re-seed environment variables/app settings from secure sources.</li> <li>Rotate credentials if exposure is suspected.</li> <li>Re-run deployment to ensure consistency.</li> </ul> </li> </ul>"},{"location":"operational/Disaster-Recovery/#rtorpo-targets","title":"RTO/RPO targets","text":"<ul> <li>RTO: restore core service within DfE standards timeframe by automating infrastructure and deployments.</li> <li>RPO: limited data loss based on database backup frequency and retention; use PITR/failover for reduction.</li> </ul>"},{"location":"operational/Disaster-Recovery/#operational-checklist","title":"Operational checklist","text":"<ul> <li>Confirm scope and impact; notify stakeholders.</li> <li>Choose recovery path (redeploy vs. reprovision).</li> <li>Apply IaC to recreate resources if needed.</li> <li>Deploy latest known-good container images.</li> <li>Restore database (failover/PITR) if required.</li> <li>Validate health checks, logs, and synthetic tests.</li> <li>Restore traffic and monitor.</li> </ul>"},{"location":"operational/Disaster-Recovery/#prevention-and-readiness","title":"Prevention and readiness","text":"<ul> <li>Regularly validate backups and restore procedures.</li> <li>Keep IaC current with production state.</li> <li>Automate smoke tests post-deploy.</li> <li>Document environment variables and required app settings (stored securely).</li> </ul>"},{"location":"operational/Disaster-Recovery/#glossary","title":"Glossary","text":"<ul> <li>IaC: Infrastructure as Code</li> <li>RTO: Recovery Time Objective</li> <li>RPO: Recovery Point Objective</li> <li>PITR: Point-in-time restore</li> <li>Failover: Manual or automated failover</li> <li>Synthetic tests: Automated tests to validate application health</li> <li>Synthetic monitoring: Automated monitoring to validate application health</li> <li>Synthetic monitoring dashboard: Dashboard to monitor synthetic tests</li> <li>Synthetic monitoring alerts: Alerts to notify stakeholders of test failures</li> </ul>"},{"location":"operational/ELZ-Subscription/","title":"Azure Subscription in the new Enterprise Landing Zone (ELZ)","text":""},{"location":"operational/ELZ-Subscription/#overview","title":"Overview","text":"<p>This document details our process being one of the first to deploy to the new ELZ.</p>"},{"location":"operational/ELZ-Subscription/#dfe-azure","title":"DfE Azure","text":"<p>All services are provisioned via Terraform, possibly even the DevOps instrumentation, so others can repeat the process.</p> <p>To do this, we have been configuring the deployment accordingly.</p>"},{"location":"operational/ELZ-Subscription/#infrastructure-as-code-changes","title":"Infrastructure as Code Changes","text":"<p>These changes exist in the <code>src/Infrastructure/terraform</code> folder of the root project.</p> <p>Currently this is set to:</p> <p><pre><code>locals {\n  common_tags = {\n    \"Environment\"      = var.environment\n    \"Product\"          = \"Get-To-An-Answer\"\n    \"Service\"          = \"Teacher Training and Qualifications\"\n    \"Service Offering\" = \"Get To An Answer\"\n  }\n  service_prefix = \"s263d01\"\n  location       = \"uksouth\"\n}\n</code></pre> We have .tfvars files for each environment, which are used to set the <code>environment</code> and <code>environment_prefix</code> variables.</p>"},{"location":"operational/ELZ-Subscription/#resource-naming-conventions","title":"Resource naming conventions","text":"<p>{service-id}{env: d|t|p}{number: 01-99}-{resource-abbr}-uks-{free-text-description}</p> <p>e.g. <code>s263d01-api-uks-api-service</code></p>"},{"location":"operational/ELZ-Subscription/#github-actions","title":"GitHub Actions","text":""},{"location":"operational/ELZ-Subscription/#environment-secrets","title":"Environment Secrets","text":"<p>For each environment, the following secrets need updating in GitHub by someone with the correct permissions:</p> <ul> <li><code>AZURE_CLIENT_ID</code> - The client ID the Azure SDK (and Terraform) should use</li> <li><code>AZURE_CLIENT_SECRET</code> - The secret for the above client ID</li> <li><code>AZURE_SUBSCRIPTION_ID</code> - The subscription in which the new infrastructure should live</li> <li><code>AZURE_TENANT_ID</code> - The tenant in which the new infrastructure should live</li> </ul>"},{"location":"operational/ELZ-Subscription/#post-deployment-steps","title":"Post-Deployment Steps","text":"<p>TDB</p>"},{"location":"operational/Stopping-The-Site/","title":"Stopping The Site","text":""},{"location":"operational/Stopping-The-Site/#overview","title":"Overview","text":"<p>How to temporarily disable the service during incidents (e.g., DDoS, critical vulnerability) and how to bring it back safely.</p>"},{"location":"operational/Stopping-The-Site/#prerequisites","title":"Prerequisites","text":"<ul> <li>Access to the Azure subscription and resource group hosting the service.</li> <li>Permission to manage App Services and networking endpoints.</li> <li>Coordination channel open with stakeholders.</li> </ul>"},{"location":"operational/Stopping-The-Site/#options-to-stop-traffic","title":"Options to stop traffic","text":""},{"location":"operational/Stopping-The-Site/#1-stop-web-apps-fastest","title":"1) Stop Web Apps (fastest)","text":"<ul> <li>For each environment Web App (API, Frontend, Admin as applicable), store service via the Azure console (manually).</li> <li>Effect: containers are halted; endpoints become unavailable.</li> <li>Rollback: Start the Web Apps and verify health.</li> </ul>"},{"location":"operational/Stopping-The-Site/#2-block-ingress-via-front-door-or-network-security-group","title":"2) Block ingress via front-door or network security group","text":"<ul> <li>If an edge or routing component fronts the apps, disable the endpoint or block routes.</li> <li>Effect: external traffic is cut off while apps may remain running.</li> <li>Rollback: re-enable the endpoint and verify routes/health.</li> </ul>"},{"location":"operational/Stopping-The-Site/#safe-shutdown-checklist","title":"Safe shutdown checklist","text":"<ul> <li>Notify DfE, colleagues and support engineers.</li> <li>Confirm action in the correct subscription and environment.</li> <li>Stop the apps or block the traffic to the apps and then verify endpoints are unavailable.</li> <li>Monitor for any other suspicious activity.</li> </ul>"},{"location":"operational/Stopping-The-Site/#bringing-the-site-back","title":"Bringing the site back","text":"<ul> <li>Re-enable endpoints or start Web Apps.</li> <li>Validate:<ul> <li>App health endpoints return healthy status.</li> <li>Admin can authenticate and basic CRUD works (if applicable).</li> <li>Frontend loads and can reach the API.</li> </ul> </li> <li>Monitor logs and metrics for stability before closing the incident.</li> </ul>"},{"location":"operational/Stopping-The-Site/#notes","title":"Notes","text":"<ul> <li>Configuration and secrets are untouched by stop/start.</li> <li>If configuration changed during downtime, review and redeploy before restarting.</li> <li>Document actions taken and outcomes for post-incident review.</li> </ul>"}]}